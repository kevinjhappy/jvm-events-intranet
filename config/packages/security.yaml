security:
    encoders:
        App\Entity\Staff:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Staff
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider

            logout:
                path: app_logout

#            guard:
#                authenticators:
#                    - App\Security\Authenticator\FacebookAuthenticator
#                    - App\Security\Authenticator\GoogleAuthenticator
#                    - App\Security\AppCustomAuthenticator
#                entry_point: App\Security\Authenticator\FacebookAuthenticator
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_RP:       ROLE_USER
        ROLE_ADMIN: [ROLE_RP, ROLE_ALLOWED_TO_SWITCH]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

#knpu_oauth2_client:
#    clients:
#        google:
#            # must be "google" - it activates that type!
#            type: google
#            # add and configure client_id and client_secret in parameters.yml
#            client_id: '%env(resolve:GOOGLE_CLIENT_ID)%'
#            client_secret: '%env(resolve:GOOGLE_CLIENT_SECRET)%'
#            # a route name you'll create
#            redirect_route: connect_google_check
#            redirect_params: {}
#            # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
#            # access_type: ''
#            # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
#            # hosted_domain: ''
#            # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
#            # user_fields: {}
#            # whether to check OAuth2 "state": defaults to true
#            # use_state: true
#        facebook:
#            type: facebook
#            client_id: '%env(resolve:AZURE_CLIENT_ID)%'
#            client_secret: '%env(resolve:AZURE_CLIENT_SECRET)%'
#            redirect_route: connect_facebook_check
#            redirect_params: {}
#            graph_api_version: v2.12
